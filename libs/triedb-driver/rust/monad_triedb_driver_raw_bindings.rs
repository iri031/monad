/* automatically generated by rust-bindgen 0.71.1 */

unsafe extern "C" {
    pub fn outcome_make_result_status_code_success(
        out: *mut ::std::os::raw::c_void,
        bytes: usize,
        offset: usize,
        toset: *const ::std::os::raw::c_void,
        tosetbytes: usize,
    );
}
unsafe extern "C" {
    pub fn outcome_make_result_status_code_failure_posix(
        out: *mut ::std::os::raw::c_void,
        bytes: usize,
        offset: usize,
        errcode: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn outcome_make_result_status_code_failure_system(
        out: *mut ::std::os::raw::c_void,
        bytes: usize,
        offset: usize,
        errcode: isize,
    );
}
unsafe extern "C" {
    pub fn outcome_status_code_equal(
        a: *const ::std::os::raw::c_void,
        b: *const ::std::os::raw::c_void,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn outcome_status_code_equal_generic(
        a: *const ::std::os::raw::c_void,
        errcode: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn outcome_status_code_message(
        a: *const ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cxx_status_code_system {
    pub domain: *mut ::std::os::raw::c_void,
    pub value: isize,
}
impl Default for cxx_status_code_system {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct cxx_result_status_code_system_monad {
    pub value: isize,
    pub flags: ::std::os::raw::c_uint,
    pub error: cxx_status_code_system,
}
impl Default for cxx_result_status_code_system_monad {
    fn default() -> Self {
        let mut s = ::std::mem::MaybeUninit::<Self>::uninit();
        unsafe {
            ::std::ptr::write_bytes(s.as_mut_ptr(), 0, 1);
            s.assume_init()
        }
    }
}
unsafe extern "C" {
    pub fn outcome_make_result_system_monad_failure_posix(
        errcode: ::std::os::raw::c_int,
    ) -> cxx_result_status_code_system_monad;
}
unsafe extern "C" {
    pub fn outcome_make_result_system_monad_failure_system(
        errcode: isize,
    ) -> cxx_result_status_code_system_monad;
}
pub type monad_c_result = cxx_result_status_code_system_monad;
unsafe extern "C" {
    pub fn monad_c_make_success(v: isize) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_make_failure(ec: ::std::os::raw::c_int) -> monad_c_result;
}
#[repr(C)]
#[derive(Debug)]
pub struct monad_c_triedb {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn monad_c_triedb_open(
        dbpaths: *mut *const ::std::os::raw::c_char,
        arg1: *mut *mut monad_c_triedb,
    ) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_triedb_close(arg1: *mut monad_c_triedb) -> monad_c_result;
}
pub type monad_c_triedb_bytes = *const u8;
unsafe extern "C" {
    pub fn monad_c_triedb_read(
        arg1: *mut monad_c_triedb,
        key: monad_c_triedb_bytes,
        key_len_nibbles: u8,
        value: *mut monad_c_triedb_bytes,
        block_id: u64,
    ) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_triedb_async_read(
        arg1: *mut monad_c_triedb,
        key: monad_c_triedb_bytes,
        key_len_nibbles: u8,
        block_id: u64,
        completed: ::std::option::Option<
            unsafe extern "C" fn(
                value: monad_c_result,
                length: usize,
                user: *mut ::std::os::raw::c_void,
            ),
        >,
        user: *mut ::std::os::raw::c_void,
    );
}
pub const triedb_async_traverse_callback_triedb_async_traverse_callback_value:
    triedb_async_traverse_callback = 0;
pub const triedb_async_traverse_callback_triedb_async_traverse_callback_finished_normally:
    triedb_async_traverse_callback = 1;
pub const triedb_async_traverse_callback_triedb_async_traverse_callback_finished_early:
    triedb_async_traverse_callback = 2;
pub type triedb_async_traverse_callback = ::std::os::raw::c_uint;
unsafe extern "C" {
    pub fn monad_c_triedb_make_rust_bindgen_emit_this_enum() -> triedb_async_traverse_callback;
}
pub type monad_c_triedb_callback_func = ::std::option::Option<
    unsafe extern "C" fn(
        kind: monad_c_result,
        context: *mut ::std::os::raw::c_void,
        path: monad_c_triedb_bytes,
        path_len: usize,
        value: monad_c_triedb_bytes,
        value_len: usize,
    ),
>;
unsafe extern "C" {
    pub fn monad_c_triedb_traverse(
        arg1: *mut monad_c_triedb,
        key: monad_c_triedb_bytes,
        key_len_nibbles: u8,
        block_id: u64,
        context: *mut ::std::os::raw::c_void,
        callback: monad_c_triedb_callback_func,
    ) -> bool;
}
unsafe extern "C" {
    pub fn monad_c_triedb_async_traverse(
        arg1: *mut monad_c_triedb,
        key: monad_c_triedb_bytes,
        key_len_nibbles: u8,
        block_id: u64,
        context: *mut ::std::os::raw::c_void,
        callback: monad_c_triedb_callback_func,
    );
}
unsafe extern "C" {
    pub fn monad_c_triedb_async_ranged_get(
        arg1: *mut monad_c_triedb,
        prefix_key: monad_c_triedb_bytes,
        prefix_len_nibbles: u8,
        min_key: monad_c_triedb_bytes,
        min_len_nibbles: u8,
        max_key: monad_c_triedb_bytes,
        max_len_nibbles: u8,
        block_id: u64,
        context: *mut ::std::os::raw::c_void,
        callback: monad_c_triedb_callback_func,
    );
}
unsafe extern "C" {
    pub fn monad_c_triedb_poll(
        arg1: *mut monad_c_triedb,
        blocking: bool,
        count: usize,
    ) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_triedb_finalize(value: monad_c_triedb_bytes) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_triedb_latest_voted_block(arg1: *mut monad_c_triedb) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_triedb_latest_voted_round(arg1: *mut monad_c_triedb) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_triedb_latest_finalized_block(arg1: *mut monad_c_triedb) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_triedb_latest_verified_block(arg1: *mut monad_c_triedb) -> monad_c_result;
}
unsafe extern "C" {
    pub fn monad_c_triedb_earliest_finalized_block(arg1: *mut monad_c_triedb) -> monad_c_result;
}
