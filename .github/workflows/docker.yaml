name: Docker

on:
  push:

jobs:
  list-commits:
    runs-on: ubuntu-24.04-32
    outputs:
      commits: ${{ steps.save.outputs.COMMITS }}
    steps:
      - name: List commits
        id: list
        uses: actions/github-script@v6
        env:
          ALL_COMMITS: ${{ toJSON(github.event.commits) }}
        with:
          script: |
              const commits = JSON.parse(process.env.ALL_COMMITS);
              return commits.map(commit => commit.id).join(',');
      - name: Save output
        id: save
        run: |
          commits_list="${{ steps.list.outputs.result }}"
          commits_json=$(jq -nc --arg commits_list "$commits_list" '{"commits": ($commits_list | split(",") | map(select(. != "")))}')
          echo "commits=$commits_json" >> $GITHUB_OUTPUT
  
  build:
    needs: [list-commits]
    strategy:
      matrix:
        commit: ${{ fromJson(needs.list-commits.outputs.commits).commits }}
        CMAKE_BUILD_TYPE: [RelWithDebInfo, Debug]
        compiler: [{CXX: g++-13, CC: gcc-13}, {CXX: clang++-18, CC: clang-18}]

    runs-on: ubuntu-24.04-32

    steps:
      - name: Generate app token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.REPO_READONLY_GITHUB_APP_ID }}
          private_key: ${{ secrets.REPO_READONLY_GITHUB_APP_KEY }}
          permissions: >-
            {"contents": "read"}

      - name: Checkout repo and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build `base` stage
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          ulimit: "memlock=-1:-1"
          target: base
          cache-from: type=gha,scope=base
          cache-to: type=gha,scope=base,mode=max

      - run: cat /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages
      - run: cat /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages
      - run: sudo bash -c "echo 1024 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages"
      - run: sudo bash -c "echo 16 > /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages"
      - run: cat /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages
      - run: cat /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages

      - name: Build `build_and_test` stage
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          build-args: |-
            CC=${{ matrix.compiler.CC }}
            CXX=${{ matrix.compiler.CXX }}
            CMAKE_BUILD_TYPE=${{ matrix.CMAKE_BUILD_TYPE }}
          allow: security.insecure # for tests which use io_uring
          ulimit: "memlock=-1:-1"
          target: build_and_test
          cache-from: type=gha,scope=base
