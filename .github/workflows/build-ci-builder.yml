name: Build CI Builder Container

on:
  # Run nightly at 2 AM UTC to avoid peak hours and sync issues  
  schedule:
    - cron: '0 2 * * *'
  # Allow manual trigger for testing
  workflow_dispatch:
  # Build on changes to the CI builder directory
  push:
    paths:
      - 'docker/ci-builder/**'
    branches:
      - main
      - master

env:
  # Registry configured via secrets to hide internal infrastructure
  REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  IMAGE_NAME: category-lab/monad-ci-builder

jobs:
  build-ci-builder:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Generate app token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.REPO_READONLY_GITHUB_APP_ID }}
          private_key: ${{ secrets.REPO_READONLY_GITHUB_APP_KEY }}
          permissions: >-
            {"contents": "read"}

      - name: Tell git to do submodules in parallel
        run: |
           git config --global submodule.fetchJobs 8

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ steps.generate_token.outputs.token }}

      # Use the fast APT mirror action to avoid the same issues during builder creation
      - name: Configure Fast APT Mirror  
        uses: vegardit/fast-apt-mirror.sh@v1
        with:
          healthchecks: 20
          speedtests: 10

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}

      - name: Build and push CI builder image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/ci-builder/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

      - name: Test CI builder image
        run: |
          echo "Testing CI builder image..."
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest clang-19 --version
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest gcc-15 --version
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest g++-15 --version
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest cmake --version
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest git --version
          echo "âœ… All essential tools verified"

      - name: Image size report
        run: |
          docker images ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest --format "table {{.Repository}}:{{.Tag}}\t{{.Size}}"
